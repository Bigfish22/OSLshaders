// Simple Bitmap Edge detect node by Benjamin Mikhaiel

shader bitmapLineSample(
    string filename = "" [[string widget = "filename"]],
    float sampleDistance = 0.001,
    float threshold = 0.2,

    float distortion = 0,
    float distortionScale = 0.01,

    output float line = 0
)
{
    point points[8] = {point(-1.0, 1.0, 0.0),
                     point(-2.0, 0.0, 0.0), 
                     point(-1.0, -1.0, 0.0),
                     point(0.0, 1.0, 0),
                     point(0.0, -1.0, 0), 
                     point(1.0, 1.0, 0.0), 
                     point(2.0, 0.0, 0.0), 
                     point(1.0, -1.0, 0.0)};
    float samples[8];

    float distortionCentred = (distortion - 0.5) * distortionScale; 

    point UV = point(u, 1-v, 0) + point(distortionCentred, distortionCentred, 0);
    for(int i = 0; i < 8; i++)
    {
        point sampleUV = UV + (points[i] * sampleDistance);
        color textureSample = texture(filename, sampleUV.x, sampleUV.y);
        samples[i] = luminance(textureSample);
    }

    float sobelX = samples[0] + (2 * samples[1]) + samples[2] - samples[5] - (2 * samples[6]) - samples[7];
    float sobelY = -samples[0] - (2 * samples[3]) - samples[2] + samples[3] + (2 * samples[4]) + samples[7];
    

    if (sqrt((sobelX * sobelX) +(sobelY * sobelY)) > threshold)
    {
        line = 1;
    }
    else
    {
        line = 0;
    }
}